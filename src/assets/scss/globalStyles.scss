$primaryColor: "#449466";
$primaryLiteColor: "#73bf90";
$secondaryColor: "#4d5055";
$mutedColor: "#9b9b9b";
.flex-box {
  display: flex;
  $directions: ('flex-start', 'space-between', 'space-around', 'center', 'flex-end');
  @each $direction in $directions {
    &.align-#{$direction} {
      align-items: #{$direction};
    }
    &.justify-#{$direction} {
      justify-content: #{$direction};
    }
  }
  @for $colLen from 1 through 12 {
    .flex-col-#{$colLen} {
      width: calc((100% / 12) * #{$colLen});
      min-width: calc((100% / 12) * #{$colLen});
      max-width: calc((100% / 12) * #{$colLen});
    }
  }
}

$widths: (
    "auto":auto,
    "100":100%,
    "90":90%
);
@each $widthType, $widthVal in $widths {
  .width-#{$widthType} {
    width: #{$widthVal};
    min-width: #{$widthVal};
  }
}

$fonts: (
    "medium":10pt,
    "regular":12pt,
    "large":14pt,
);
@each $fontSizeType, $fontSizeVal in $fonts {
  .font-#{$fontSizeType} {
    font-size: #{$fontSizeVal};
  }
}

$spacingValues: (
    "5":5px,
    "10":10px,
    "14":14px,
    "15":15px,
    "20":20px,
    "30":30px,
    "35":35px,
    "40":45px,
);
$spacingDirections: (
    "":(top, left, right, bottom),
    t:(top),
    l:(left),
    b:(bottom),
    r:(right),
    v:(top, bottom),
    h:(left, right),
    tr:(top, right),
    tl:(top, left),
    br:(bottom, right),
    bl:(bottom, left),
    th:(top, left, right),
    bh:(bottom, left, right),
    vl:(top, bottom, left),
    vr:(top, bottom, right),
);
@each $spacingSize, $spacingValue in $spacingValues {
  @each $spacingDirection, $stylingDirections in $spacingDirections {
    .p#{$spacingDirection}-#{$spacingSize} {
      @each $stylingDirection in $stylingDirections {
        padding-#{$stylingDirection}: #{$spacingValue} !important;
      }
    }
    .m#{$spacingDirection}-#{$spacingSize} {
      @each $stylingDirection in $stylingDirections {
        margin-#{$stylingDirection}: #{$spacingValue} !important;
      }
    }
  }
}

$borderRadiusVals: (
    2:2px,
    5:5px,
    7:7px,
    10:20px
);
@each $borderRadiusType, $borderRadiusVal in $borderRadiusVals {
  .border-radius-#{$borderRadiusType} {
    border-radius: #{$borderRadiusVal};
  }
}

$themeColors: (
    "primary-lite" : $primaryLiteColor,
    "primary":$primaryColor,
    "danger":"",
    "success":"",
    "white":white,
    "dark":"#202020",
    "secondary":$secondaryColor,
    "muted":$mutedColor,
);
@each $themeColorName, $themeColorVal in $themeColors {
  .text-#{$themeColorName} {
    color: #{$themeColorVal}
  }

  .bg-#{$themeColorName} {
    background-color: #{$themeColorVal};
  }
}

@each $dir in ("", "-top", "-right", "-bottom", "-left") {
  @each $borderColorName, $borderColorVal in ("":"rgba(235, 235, 235, 0.75)", "-dark":"#d3d3d3", "-primary":$primaryColor) {
    @each $borderTypeName, $borderTypeVal in ("":"solid", "-dashed":"dashed") {
      .bordered#{$dir}#{$borderTypeName}#{$borderColorName} {
        border#{$dir}: 1px #{$borderTypeVal} #{$borderColorVal};
      }

      @for $borderWidth from 2 through 5 {
        .bordered#{$dir}#{$borderColorName}#{$borderTypeName}-#{$borderWidth} {
          border#{$dir}: #{$borderWidth}px #{$borderTypeVal} #{$borderColorVal};
        }
      }
    }
  }
}